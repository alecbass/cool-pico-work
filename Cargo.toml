[package]
edition = "2021"
name = "cool-pico-work"
version = "0.1.0"

crate-type = "bin"

[build-dependencies]
# Used to create Rust bindings to C functions
bindgen = "0.71.1"

# Used to compile Jartis c files
cc = "1.2.10"

[dependencies]

cortex-m-rt = "0.7.5"
cortex-m = "0.7.7"

embedded-hal = { version = "1.0.0" }
embedded-hal-nb = { version = "1.0.0" }

# Shared with jartis so we can use pins and such
# rp-pico = { version = "0.9.0", features = ["boot2", "rt", "critical-section-impl", "rom-func-cache", "disable-intrinsics"] } # disable-intrinsics results in undefined symbols
rp-pico = { version = "0.9.0" }

jartis = { path = "./jartis" }

# For unit conversions
fugit = "0.3.7"

[patch.crates-io]
# cortex-m-rt = { path = "./cortex-m/cortex-m-rt" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
